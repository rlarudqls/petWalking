// Generated by view binder compiler. Do not edit!
package com.example.walking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.walking.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textViewHumidity;

  @NonNull
  public final TextView textViewWind;

  @NonNull
  public final TextView textviewMaxtemp;

  @NonNull
  public final TextView textviewNowCloud;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull TextView textView3,
      @NonNull TextView textViewHumidity, @NonNull TextView textViewWind,
      @NonNull TextView textviewMaxtemp, @NonNull TextView textviewNowCloud) {
    this.rootView = rootView;
    this.textView3 = textView3;
    this.textViewHumidity = textViewHumidity;
    this.textViewWind = textViewWind;
    this.textviewMaxtemp = textviewMaxtemp;
    this.textviewNowCloud = textviewNowCloud;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView_humidity;
      TextView textViewHumidity = ViewBindings.findChildViewById(rootView, id);
      if (textViewHumidity == null) {
        break missingId;
      }

      id = R.id.textView_wind;
      TextView textViewWind = ViewBindings.findChildViewById(rootView, id);
      if (textViewWind == null) {
        break missingId;
      }

      id = R.id.textview_maxtemp;
      TextView textviewMaxtemp = ViewBindings.findChildViewById(rootView, id);
      if (textviewMaxtemp == null) {
        break missingId;
      }

      id = R.id.textview_nowCloud;
      TextView textviewNowCloud = ViewBindings.findChildViewById(rootView, id);
      if (textviewNowCloud == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, textView3, textViewHumidity,
          textViewWind, textviewMaxtemp, textviewNowCloud);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
