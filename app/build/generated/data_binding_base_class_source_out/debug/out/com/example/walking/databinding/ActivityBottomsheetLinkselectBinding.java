// Generated by view binder compiler. Do not edit!
package com.example.walking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.walking.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBottomsheetLinkselectBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnStartwalk;

  @NonNull
  public final CheckBox linkseletionAlreadcheckbox;

  @NonNull
  public final TextView linkseletionItemNewlink;

  @NonNull
  public final TextView linkseletionItemReadylink;

  @NonNull
  public final CheckBox linkseletionNewycheckbox;

  @NonNull
  public final TextView textView;

  private ActivityBottomsheetLinkselectBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnStartwalk, @NonNull CheckBox linkseletionAlreadcheckbox,
      @NonNull TextView linkseletionItemNewlink, @NonNull TextView linkseletionItemReadylink,
      @NonNull CheckBox linkseletionNewycheckbox, @NonNull TextView textView) {
    this.rootView = rootView;
    this.btnStartwalk = btnStartwalk;
    this.linkseletionAlreadcheckbox = linkseletionAlreadcheckbox;
    this.linkseletionItemNewlink = linkseletionItemNewlink;
    this.linkseletionItemReadylink = linkseletionItemReadylink;
    this.linkseletionNewycheckbox = linkseletionNewycheckbox;
    this.textView = textView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBottomsheetLinkselectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBottomsheetLinkselectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bottomsheet_linkselect, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBottomsheetLinkselectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_startwalk;
      Button btnStartwalk = ViewBindings.findChildViewById(rootView, id);
      if (btnStartwalk == null) {
        break missingId;
      }

      id = R.id.linkseletion_alreadcheckbox;
      CheckBox linkseletionAlreadcheckbox = ViewBindings.findChildViewById(rootView, id);
      if (linkseletionAlreadcheckbox == null) {
        break missingId;
      }

      id = R.id.linkseletion_item_newlink;
      TextView linkseletionItemNewlink = ViewBindings.findChildViewById(rootView, id);
      if (linkseletionItemNewlink == null) {
        break missingId;
      }

      id = R.id.linkseletion_item_readylink;
      TextView linkseletionItemReadylink = ViewBindings.findChildViewById(rootView, id);
      if (linkseletionItemReadylink == null) {
        break missingId;
      }

      id = R.id.linkseletion_newycheckbox;
      CheckBox linkseletionNewycheckbox = ViewBindings.findChildViewById(rootView, id);
      if (linkseletionNewycheckbox == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityBottomsheetLinkselectBinding((LinearLayout) rootView, btnStartwalk,
          linkseletionAlreadcheckbox, linkseletionItemNewlink, linkseletionItemReadylink,
          linkseletionNewycheckbox, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
